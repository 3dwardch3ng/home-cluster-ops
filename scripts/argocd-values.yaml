crds:
  # -- Install and upgrade CRDs
  install: false

global:
  domain: argocd.cluster.edward.sydney

configs:
  params:
    server.insecure: true

controller:
  replicas: 1

redis-ha:
  enabled: true

server:
  autoscaling:
    enabled: true
    minReplicas: 2
  # -- Resource limits and requests for the argocd-extensions container
  resources:
    limits:
      cpu: 100m
      memory: 256Mi
    requests:
      cpu: 20m
      memory: 138Mi
  service:
    type: NodePort
  ingress:
#    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/ssl-passthrough: "true"
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
      nginx.ingress.kubernetes.io/use-regex: "true"
    ingressClassName: nginx
    hostname: argocd.cluster.edward.sydney
    extraTls:
      - hosts:
          - argocd.cluster.edward.sydney
        # Based on the ingress controller used secret might be optional
        secretName: wildcard-tls
  ingressGrpc:
    enabled: true
    ingressClassName: contour-internal
    extraTls:
      - hosts:
          - grpc.argocd.cluster.edward.sydney
        secretName: wildcard-tls

repoServer:
  autoscaling:
    enabled: true
    minReplicas: 2
  # -- Resource limits and requests for the repo server pods
  resources:
    limits:
      cpu: 100m
      memory: 258Mi
    requests:
      cpu: 20m
      memory: 128Mi
  rbac:
    - apiGroups:
        - ""
      resources:
        - secrets
      verbs:
        - get

applicationSet:
  replicas: 2